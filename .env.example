# =============================================================================
# FastIntercomMCP Configuration
# Copy this file to .env and update with your actual values
# =============================================================================

# REQUIRED CONFIGURATION
# =============================================================================

# Intercom access token - get from https://developers.intercom.com/
# Format: Your access token should start with 'dG9rOmxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx'
INTERCOM_ACCESS_TOKEN=your_intercom_access_token_here

# Database connection URL
# For PostgreSQL: postgresql://username:password@host:port/database_name
# For local development: postgresql://fastintercom:password@localhost:5432/intercom
DATABASE_URL=postgresql://fastintercom:password@localhost:5432/intercom

# OPTIONAL CONFIGURATION
# =============================================================================

# MCP Server Settings
MCP_PORT=8000
MCP_HOST=0.0.0.0

# Logging
LOG_LEVEL=INFO
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL

# Sync Configuration
SYNC_INTERVAL=3600
# How often to sync new data from Intercom (in seconds)
# 3600 = 1 hour, 1800 = 30 minutes, 300 = 5 minutes

# Database Performance
MAX_CONNECTIONS=50
# Maximum number of database connections in the pool

# Redis Cache (Optional)
# Uncomment to enable Redis caching for better performance
# REDIS_URL=redis://localhost:6379/0

# Security Settings (Optional)
# =============================================================================

# API Key Protection (uncomment to enable)
# API_KEY_REQUIRED=true
# API_KEY_HEADER=X-API-Key

# CORS and Origin Control
ALLOWED_ORIGINS=*
# For production, specify exact origins: https://claude.ai,https://cursor.sh

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS=1000
RATE_LIMIT_WINDOW=3600
# Allow 1000 requests per hour per client

# Development Settings
# =============================================================================

# Environment
ENVIRONMENT=development
# Options: development, staging, production

# Debug Mode
DEBUG=false
# Set to true for verbose logging and error details

# Test Database (for running tests)
TEST_DATABASE_URL=postgresql://fastintercom:password@localhost:5432/intercom_test

# Performance Monitoring
# =============================================================================

# Enable performance metrics collection
METRICS_ENABLED=true

# Performance thresholds (milliseconds)
SLOW_QUERY_THRESHOLD=100
ALERT_RESPONSE_TIME=200

# Health Check Settings
HEALTH_CHECK_ENABLED=true
HEALTH_CHECK_INTERVAL=30

# Advanced Configuration
# =============================================================================

# Sync Batch Sizes
SYNC_BATCH_SIZE=1000
# How many conversations to process in each batch

# Query Timeouts
DATABASE_QUERY_TIMEOUT=30
INTERCOM_API_TIMEOUT=60

# Memory Limits
MAX_MEMORY_USAGE=500
# Maximum memory usage in MB before warnings

# Backup and Retention
DATA_RETENTION_DAYS=365
# How long to keep conversation data (0 = forever)

# =============================================================================
# Quick Setup Guide:
# 1. Copy this file: cp .env.example .env
# 2. Get Intercom token: https://developers.intercom.com/
# 3. Set up PostgreSQL database
# 4. Update INTERCOM_ACCESS_TOKEN and DATABASE_URL
# 5. Run: docker-compose up -d
# =============================================================================